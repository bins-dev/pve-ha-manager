The test scenario is:
- vm:101, vm:102, and vm:103 must be kept together
- vm:201, vm:202, and vm:203 must be kept together
- vm:101 and vm:201 must be kept separate
- Therefore, vm:101, vm:102, and vm:103 must all be kept separate from vm:201,
  vm:202, and vm:203 and vice versa
- vm:101, vm:103, vm:201, and vm:203 are currently running on node1
- vm:102 and vm:202 are both running on node2

The expected outcome is:
- The resource-node placements do not adhere to the defined resource affinity
  rules, therefore the HA resources must be moved accordingly. In the end,
  vm:101, vm:102, and vm:103 should be on a separate node as vm:201, vm:202,
  and vm:203.

The current final outcome is correct, but is inefficient and doesn't hold all
guarantees (i.e. do not put resources in strict node affinity rules on the same
node nor their migration target) at all times. As shown by
test-resources-affinity-strict-mixed4, it needs at least four nodes to hold all
guarantees and rebalance the resources to their correct node placements.
